(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,a){e.exports=a(17)},16:function(e,t,a){},17:function(e,t,a){"use strict";a.r(t);var s=a(0),n=a.n(s),r=a(8),l=a.n(r),c=(a(16),a(1)),i=a(2),o=a(3),p=a(5),h=a(4),u=a(6),d=function(e){function t(){var e,a;Object(i.a)(this,t);for(var s=arguments.length,n=new Array(s),r=0;r<s;r++)n[r]=arguments[r];return(a=Object(p.a)(this,(e=Object(h.a)(t)).call.apply(e,[this].concat(n)))).state={value:a.props.card.value,suit:a.props.card.suit,code:a.props.card.code,image:a.props.card.image},a}return Object(u.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){return n.a.createElement("div",{className:"Card"},n.a.createElement("img",{src:this.state.image,alt:"Card"}))}}]),t}(s.Component),y=a(9),m=a.n(y),S=function(e){function t(){return Object(i.a)(this,t),Object(p.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e,t=this;return this.props.cards.length&&(e=this.props.cards.map(function(e){return n.a.createElement(d,{key:e.code,card:e,history:t.props.history})})),n.a.createElement("div",{className:"Hand"},"Dealer"===this.props.name?n.a.createElement("div",{className:"hand-container"},this.props.playerPlaying?n.a.createElement("h3",null,this.props.name," ",this.props.dealerInitialScore):n.a.createElement("h3",null,this.props.name," ",this.props.score),this.props.playerPlaying?n.a.createElement("div",{className:"cards-container"},n.a.createElement("img",{src:m.a,alt:"cardback",className:"blankCard"}),e[1]):n.a.createElement("div",{className:"cards-container"},e)):n.a.createElement("div",{className:"hand-container"},n.a.createElement("h3",null,this.props.name," ",this.props.score),n.a.createElement("div",{className:"cards-container"},e),this.props.playerPlaying?n.a.createElement("div",{className:"playingButtons"},n.a.createElement("button",{className:"sm",onClick:function(e){return t.props.handleDrawCardEvent(e)}},"Hit"),n.a.createElement("button",{className:"sm",onClick:function(e){return t.props.handleStandEvent(e)}},"Stand"),2===this.props.cards.length?n.a.createElement("button",{className:"sm",onClick:function(e){return t.props.handleDoubleDownEvent(e)}},"Double Down"):""):n.a.createElement("button",{className:"sm",onClick:function(e){return t.props.handleDealEvent(e)}},"Deal")))}}]),t}(s.Component),k=function(e){function t(){return Object(i.a)(this,t),Object(p.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this.props.playerWins+this.props.dealerWins+this.props.pushes,t=Math.floor(this.props.playerWins/e*100),a=Math.floor(this.props.dealerWins/e*100);return n.a.createElement("div",{className:"stats-container"},n.a.createElement("div",{className:"playerStats"},n.a.createElement("p",null,"Player Wins: ",this.props.playerWins),n.a.createElement("p",null,"Player Win Percentage: ",t||"0","%"),n.a.createElement("p",null,"Player Blackjacks: ",this.props.playerBlackjacks),n.a.createElement("p",null,"Player Busts: ",this.props.playerBusts)),n.a.createElement("div",{className:"gameStats"},n.a.createElement("p",null,"Pushes: ",this.props.pushes),n.a.createElement("p",null,"Total Hands: ",e)),n.a.createElement("div",{className:"dealerStats"},n.a.createElement("p",null,"Dealer Wins: ",this.props.dealerWins),n.a.createElement("p",null,"Dealer Win Percentage: ",a||"0","%"),n.a.createElement("p",null,"Dealer Blackjacks: ",this.props.dealerBlackjacks),n.a.createElement("p",null,"Dealer Busts: ",this.props.dealerBusts)))}}]),t}(s.Component),b=function(e){function t(){return Object(i.a)(this,t),Object(p.a)(this,Object(h.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(o.a)(t,[{key:"render",value:function(){var e=this;return n.a.createElement("div",{className:"chips-container"},!1===this.props.gameStarted?n.a.createElement("div",{className:"buyInButtons"},n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseChipOne(t)}},"$1"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseChipFive(t)}},"$5"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseChipTen(t)}},"$10"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseChipTwentyFive(t)}},"$25"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseChipHundred(t)}},"$100"),n.a.createElement("button",{className:"sm red",onClick:function(t){return e.props.clearChips(t)}},"Clear Chips"),n.a.createElement("h1",null,"Buy-In Amount"),n.a.createElement("h1",null,"$",this.props.playerChips.toFixed(2)),n.a.createElement("h1",null,"Initial Bet"),n.a.createElement("h1",null,"$",this.props.betAmount.toFixed(2)),n.a.createElement("div",{className:"chipBets"},!1===this.props.playerPlaying&&0!==this.props.playerChips?n.a.createElement("div",{className:"chipButtons"},n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetOne(t)}},"$1"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetFive(t)}},"$5"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetTen(t)}},"$10"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetTwentyFive(t)}},"$25"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetHundred(t)}},"$100"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetAllIn(t)}},"Max Bet"),n.a.createElement("button",{className:"sm red",onClick:function(t){return e.props.clearBets(t)}},"Clear Bets")):"")):n.a.createElement("div",{className:"chipStats"},n.a.createElement("div",{className:"chipBets"},!1===this.props.playerPlaying&&0!==this.props.playerChips?n.a.createElement("div",{className:"chipButtons"},n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetOne(t)}},"$1"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetFive(t)}},"$5"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetTen(t)}},"$10"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetTwentyFive(t)}},"$25"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetHundred(t)}},"$100"),n.a.createElement("button",{className:"sm",onClick:function(t){return e.props.increaseBetAllIn(t)}},"Max Bet"),n.a.createElement("button",{className:"sm red",onClick:function(t){return e.props.clearBets(t)}},"Clear Bets")):""),n.a.createElement("h2",null,"Bet $",this.props.betAmount.toFixed(2)),n.a.createElement("h2",null,"Player Chips $",this.props.playerChips.toFixed(2)),n.a.createElement("h5",null,"Chips in Play $ ",this.props.chipsInPlay.toFixed(2)),n.a.createElement("h5",null,"Win Amount $ ",this.props.winAmount.toFixed(2)),n.a.createElement("h3",null,"Initial Buy-In $ ",this.props.initialBuy.toFixed(2))))}}]),t}(s.Component),C=function(e){function t(e){var a;return Object(i.a)(this,t),(a=Object(p.a)(this,Object(h.a)(t).call(this,e))).increaseChipOne=function(e){a.setState({initialBuy:a.state.initialBuy+1,playerChips:a.state.playerChips+1})},a.increaseChipFive=function(e){a.setState({initialBuy:a.state.initialBuy+5,playerChips:a.state.playerChips+5})},a.increaseChipTen=function(e){a.setState({initialBuy:a.state.initialBuy+10,playerChips:a.state.playerChips+10})},a.increaseChipTwentyFive=function(e){a.setState({initialBuy:a.state.initialBuy+25,playerChips:a.state.playerChips+25})},a.increaseChipHundred=function(e){a.setState({initialBuy:a.state.initialBuy+100,playerChips:a.state.playerChips+100})},a.clearChips=function(e){a.setState({initialBuy:0,playerChips:0})},a.increaseBetOne=function(e){a.state.betAmount+1>a.state.playerChips?a.setState({gameMessage:"You don't have enough chips to bet that amount"}):a.setState({betAmount:a.state.betAmount+1})},a.increaseBetFive=function(e){a.state.betAmount+5>a.state.playerChips?a.setState({gameMessage:"You don't have enough chips to bet that amount"}):a.setState({betAmount:a.state.betAmount+5})},a.increaseBetTen=function(e){a.state.betAmount+10>a.state.playerChips?a.setState({gameMessage:"You don't have enough chips to bet that amount"}):a.setState({betAmount:a.state.betAmount+10})},a.increaseBetTwentyFive=function(e){a.state.betAmount+25>a.state.playerChips?a.setState({gameMessage:"You don't have enough chips to bet that amount"}):a.setState({betAmount:a.state.betAmount+25})},a.increaseBetHundred=function(e){a.state.betAmount+100>a.state.playerChips?a.setState({gameMessage:"You don't have enough chips to bet that amount"}):a.setState({betAmount:a.state.betAmount+100})},a.increaseBetAllIn=function(e){a.setState({betAmount:a.state.playerChips})},a.clearBets=function(e){a.setState({betAmount:0})},a.handleDrawCardEvent=function(e){a.state.playerScore<21&&fetch("https://deckofcardsapi.com/api/deck/".concat(a.state.deckId,"/draw/?count=1")).then(function(e){return e.json()}).then(function(e){var t=a.returnValue(e.cards[0].value);11===t&&a.state.playerHasAce?a.setState({playerScore:a.state.playerScore-10,playerHasAce:!0,playerSplittable:!1}):11===t&&a.setState({playerHasAce:!0,playerSplittable:!1}),a.setState({playerHand:[].concat(Object(c.a)(a.state.playerHand),[e.cards[0]]),playerScore:a.state.playerScore+t,playerSplittable:!1}),a.bustChecker()}).catch(function(e){return console.log(e)})},a.handleStandEvent=function(e){a.state.dealerScore>21&&a.state.dealerHasAce?(a.setState({dealerScore:a.state.dealerScore-10,dealerHasAce:!1}),a.handleStandEvent()):a.state.dealerScore<17?fetch("https://deckofcardsapi.com/api/deck/".concat(a.state.deckId,"/draw/?count=1")).then(function(e){return e.json()}).then(function(e){var t=a.returnValue(e.cards[0].value);11===t&&a.state.dealerHasAce?a.setState({dealerScore:a.state.dealerScore-10,dealerHasAce:!0}):11===t&&a.setState({dealerHasAce:!0}),a.setState({playerPlaying:!1,dealerHand:[].concat(Object(c.a)(a.state.dealerHand),[e.cards[0]]),dealerScore:a.state.dealerScore+t}),a.handleStandEvent()}):(a.setState({playerPlaying:!1}),a.checkWinner())},a.handleDoubleDownEvent=function(e){a.state.betAmount>a.state.playerChips?a.setState({gameMessage:"You do not have enough to double down!"}):(a.setState({playerChips:a.state.playerChips-a.state.betAmount,chipsInPlay:a.state.chipsInPlay+a.state.betAmount}),a.state.playerScore<21&&fetch("https://deckofcardsapi.com/api/deck/".concat(a.state.deckId,"/draw/?count=1")).then(function(e){return e.json()}).then(function(e){var t=a.returnValue(e.cards[0].value);11===t&&a.setState({playerHasAce:!0}),a.setState({playerHand:[].concat(Object(c.a)(a.state.playerHand),[e.cards[0]]),playerScore:a.state.playerScore+t,playerPlaying:!1}),a.bustChecker(),a.state.playerScore<=21&&a.handleStandEvent()}))},a.handleSplitEvent=function(e){a.setState({dealerSplit:!1})},a.handleDealEvent=function(e){a.setState({playerPlaying:!1,dealerHand:[],dealerScore:0,dealerInitialScore:0,dealerHasAce:!1,dealerHasBlackjack:!1,insurance:!1,playerHand:[],playerScore:0,playerHasAce:!1,playerHasBlackjack:!1,playerSplittable:!1,gameMessage:""}),a.handleDealHand()},a.state={gameStarted:!1,playerPlaying:!1,deckId:"",dealerHand:[],dealerScore:0,dealerInitialScore:0,dealerHasAce:!1,dealerHasBlackjack:!1,insurance:!1,playerHand:[],playerScore:0,playerHasAce:!1,playerHasBlackjack:!1,playerSplittable:!1,playerWins:0,dealerWins:0,pushes:0,playerBlackjacks:0,dealerBlackjacks:0,playerBusts:0,dealerBusts:0,gameMessage:"",initialBuy:0,playerChips:0,betAmount:0,chipsInPlay:0,winAmount:0},a}return Object(u.a)(t,e),Object(o.a)(t,[{key:"componentDidMount",value:function(){var e=this;fetch("https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=6").then(function(e){return e.json()}).then(function(t){e.setState({deckId:t.deck_id})})}},{key:"handleEndGame",value:function(){var e=this;fetch("https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=6").then(function(e){return e.json()}).then(function(t){e.setState({deckId:t.deck_id})}),this.setState({gameStarted:!1,playerPlaying:!1,dealerHand:[],dealerScore:0,dealerInitialScore:0,dealerHasAce:!1,dealerHasBlackjack:!1,insurance:!1,playerHand:[],playerScore:0,playerHasAce:!1,playerHasBlackjack:!1,playerSplittable:!1,playerWins:0,dealerWins:0,pushes:0,playerBlackjacks:0,dealerBlackjacks:0,playerBusts:0,dealerBusts:0,gameMessage:"",initialBuy:0,playerChips:0,betAmount:0,chipsInPlay:0,winAmount:0})}},{key:"returnValue",value:function(e){return{ACE:11,KING:10,QUEEN:10,JACK:10,10:10,9:9,8:8,7:7,6:6,5:5,4:4,3:3,2:2}[e]}},{key:"handleDealHand",value:function(){var e=this;0===this.state.playerChips?this.setState({gameMessage:"You have no more money! Press 'NEW GAME' to play again."}):0===this.state.betAmount?this.setState({gameMessage:"You have to bet some money!"}):this.state.betAmount>this.state.playerChips?this.setState({gameMessage:"You do not have that much money"}):(this.setState({betAmount:this.state.betAmount,playerChips:this.state.playerChips-this.state.betAmount,chipsInPlay:this.state.betAmount,gameMessage:"Choose an action...",winAmount:0}),fetch("https://deckofcardsapi.com/api/deck/".concat(this.state.deckId,"/draw/?count=4")).then(function(e){return e.json()}).then(function(t){console.log(t.remaining),t.remaining<100&&fetch("https://deckofcardsapi.com/api/deck/".concat(e.state.deckId,"/shuffle/")).then(function(e){return e.json()}).then(function(e){console.log(e),console.log("Deck reshuffled!")});var a=e.returnValue(t.cards[0].value),s=e.returnValue(t.cards[1].value),n=e.returnValue(t.cards[2].value),r=e.returnValue(t.cards[3].value);11===a&&11===n?e.setState({gameStarted:!0,playerPlaying:!0,playerHand:[].concat(Object(c.a)(e.state.playerHand),[t.cards[0],t.cards[2]]),playerHasAce:!0,playerSplittable:!0,playerScore:12,dealerHand:[].concat(Object(c.a)(e.state.dealerHand),[t.cards[1],t.cards[3]]),dealerHasAce:!1,dealerScore:e.state.dealerScore+s+r,dealerInitialScore:r}):11===a||11===n?e.setState({gameStarted:!0,playerPlaying:!0,playerHand:[].concat(Object(c.a)(e.state.playerHand),[t.cards[0],t.cards[2]]),playerScore:e.state.playerScore+a+n,playerHasAce:!0,dealerHand:[].concat(Object(c.a)(e.state.dealerHand),[t.cards[1],t.cards[3]]),dealerHasAce:!1,dealerScore:e.state.dealerScore+s+r,dealerInitialScore:r}):a===n?e.setState({gameStarted:!0,playerPlaying:!0,playerSplittable:!0,playerHand:[].concat(Object(c.a)(e.state.playerHand),[t.cards[0],t.cards[2]]),playerScore:e.state.playerScore+a+n,dealerHand:[].concat(Object(c.a)(e.state.dealerHand),[t.cards[1],t.cards[3]]),dealerHasAce:!1,dealerScore:e.state.dealerScore+s+r,dealerInitialScore:r}):e.setState({gameStarted:!0,playerPlaying:!0,playerHand:[].concat(Object(c.a)(e.state.playerHand),[t.cards[0],t.cards[2]]),playerScore:e.state.playerScore+a+n,dealerHand:[].concat(Object(c.a)(e.state.dealerHand),[t.cards[1],t.cards[3]]),dealerHasAce:!1,dealerScore:e.state.dealerScore+s+r,dealerInitialScore:r}),11===s&&11===r?e.setState({dealerHasAce:!0,dealerScore:12,insurance:!0}):11===r?e.setState({dealerHasAce:!0,insurance:!0}):11!==s&&11!==r||e.setState({dealerHasAce:!0}),e.blackJackChecker()}).catch(function(e){return console.log(e)}))}},{key:"blackJackChecker",value:function(){10===this.returnValue(this.state.playerHand[0].value)&&11===this.returnValue(this.state.playerHand[1].value)?this.setState({playerHasBlackjack:!0}):10===this.returnValue(this.state.playerHand[1].value)&&11===this.returnValue(this.state.playerHand[0].value)&&this.setState({playerHasBlackjack:!0}),10===this.returnValue(this.state.dealerHand[0].value)&&11===this.returnValue(this.state.dealerHand[1].value)?this.setState({dealerHasBlackjack:!0}):10===this.returnValue(this.state.dealerHand[1].value)&&11===this.returnValue(this.state.dealerHand[0].value)&&this.setState({dealerHasBlackjack:!0}),this.state.playerHasBlackjack&&this.state.dealerHasBlackjack?this.setState({playerPlaying:!1,pushes:this.state.pushes+1,playerChips:this.state.playerChips+this.state.chipsInPlay,chipsInPlay:0,gameMessage:"Push! You both have a Blackjack!"}):this.state.playerHasBlackjack?this.setState({playerPlaying:!1,playerWins:this.state.playerWins+1,playerBlackjacks:this.state.playerBlackjacks+1,playerChips:this.state.playerChips+this.state.betAmount+3*this.state.chipsInPlay/2,winAmount:3*this.state.chipsInPlay/2,chipsInPlay:0,gameMessage:"Blackjack!"}):this.state.dealerHasBlackjack&&this.setState({playerPlaying:!1,dealerWins:this.state.dealerWins+1,dealerBlackjacks:this.state.dealerBlackjacks+1,chipsInPlay:0,gameMessage:"Dealer has a Blackjack!"})}},{key:"bustChecker",value:function(){this.state.playerHasAce&&this.state.playerScore>21?this.setState({playerScore:this.state.playerScore-10,playerHasAce:!1}):this.state.playerScore>21&&this.setState({playerPlaying:!1,dealerWins:this.state.dealerWins+1,playerBusts:this.state.playerBusts+1,chipsInPlay:0,gameMessage:"You Busted!"})}},{key:"checkWinner",value:function(){this.state.dealerScore>21?this.setState({playerWins:this.state.playerWins+1,dealerBusts:this.state.dealerBusts+1,playerChips:this.state.playerChips+2*this.state.chipsInPlay,winAmount:this.state.chipsInPlay,chipsInPlay:0,gameMessage:"Dealer busts, you win!"}):this.state.playerScore>this.state.dealerScore&&this.state.playerScore<=21?this.setState({playerWins:this.state.playerWins+1,playerChips:this.state.playerChips+2*this.state.chipsInPlay,winAmount:this.state.chipsInPlay,chipsInPlay:0,gameMessage:"You win!"}):this.state.playerScore===this.state.dealerScore?this.setState({pushes:this.state.pushes+1,playerChips:this.state.playerChips+this.state.chipsInPlay,chipsInPlay:0,gameMessage:"You pushed!"}):this.setState({dealerWins:this.state.dealerWins+1,chipsInPlay:0,gameMessage:"You lost!"})}},{key:"render",value:function(){var e=this;return n.a.createElement("div",{className:"App"},n.a.createElement("div",{className:"gameHeader"},n.a.createElement("h1",null,"Blackjack"),this.state.gameStarted?n.a.createElement("div",null,n.a.createElement("button",{className:"lg red",onClick:function(){return e.handleEndGame()}},"New Game")):""),this.state.gameMessage?n.a.createElement("h2",null,this.state.gameMessage):n.a.createElement("h2",null,"Welcome to Blackjack! Please buy in and place a bet"),this.state.gameStarted?n.a.createElement("div",{className:"hands-container"},n.a.createElement(S,{name:"Dealer",cards:this.state.dealerHand,score:this.state.dealerScore,playerPlaying:this.state.playerPlaying,dealerInitialScore:this.state.dealerInitialScore}),n.a.createElement(S,{name:"Player",cards:this.state.playerHand,score:this.state.playerScore,playerPlaying:this.state.playerPlaying,playerSplittable:this.state.playerSplittable,handleSplitEvent:this.handleSplitEvent,handleDrawCardEvent:this.handleDrawCardEvent,handleStandEvent:this.handleStandEvent,handleDealEvent:this.handleDealEvent,handleDoubleDownEvent:this.handleDoubleDownEvent})):"",n.a.createElement(b,{playerChips:this.state.playerChips,betAmount:this.state.betAmount,initialBuy:this.state.initialBuy,chipsInPlay:this.state.chipsInPlay,winAmount:this.state.winAmount,playerPlaying:this.state.playerPlaying,gameStarted:this.state.gameStarted,increaseChipOne:this.increaseChipOne,increaseChipFive:this.increaseChipFive,increaseChipTen:this.increaseChipTen,increaseChipTwentyFive:this.increaseChipTwentyFive,increaseChipHundred:this.increaseChipHundred,clearChips:this.clearChips,increaseBetOne:this.increaseBetOne,increaseBetFive:this.increaseBetFive,increaseBetTen:this.increaseBetTen,increaseBetTwentyFive:this.increaseBetTwentyFive,increaseBetHundred:this.increaseBetHundred,increaseBetAllIn:this.increaseBetAllIn,clearBets:this.clearBets}),this.state.gameStarted?"":n.a.createElement("button",{className:"lg",onClick:function(){return e.handleDealHand()}},"Deal!"),n.a.createElement(k,{playerWins:this.state.playerWins,dealerWins:this.state.dealerWins,playerBlackjacks:this.state.playerBlackjacks,dealerBlackjacks:this.state.dealerBlackjacks,playerBusts:this.state.playerBusts,dealerBusts:this.state.dealerBusts,pushes:this.state.pushes}))}}]),t}(s.Component);l.a.render(n.a.createElement(C,null),document.getElementById("root"))},9:function(e,t,a){e.exports=a.p+"static/media/blankCard.3b5d8172.jpg"}},[[10,1,2]]]);
//# sourceMappingURL=main.52e71305.chunk.js.map